{
  "compilerOptions": {
    /* Project Options */
    "target": "ES2022",                             /* Specify ECMAScript target version for compiled JavaScript. ES2022 is good for modern Node.js. */
    "module": "NodeNext",                           /* Specify module code generation: 'CommonJS', 'ES2015', 'ES2020', 'ES2022', 'Node16', 'NodeNext', 'UMD', 'AMD', 'System', 'None'. Node16/NodeNext are ideal for ESM in Node.js. */
    "lib": ["ES2022"],                              /* Specify a list of ECMAScript library files to be included in the compilation. */
    "outDir": "./dist",                             /* Redirect output structure to the directory. */
    "rootDir": "./src/",                            /* Specify the root directory of source files. Useful for projects with multiple folders. */
    "declaration": true,                            /* Generates corresponding '.d.ts' file. Useful for libraries. */
    "declarationMap": true,                         /* Generates a sourcemap for '.d.ts' files. */
    "sourceMap": true,                              /* Generates corresponding '.map' file. */

    /* Module Resolution Options */
    "moduleResolution": "NodeNext",                 /* Specify module resolution strategy. Node16/NodeNext aligns with Node.js ESM. */
    "baseUrl": "./src/",                            /* Base directory to resolve non-absolute module names. */
    "esModuleInterop": true,                        /* Emit additional JavaScript to ease support for importing CommonJS modules. */
    "allowSyntheticDefaultImports": true,           /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "forceConsistentCasingInFileNames": true,       /* Disallow inconsistently-cased references to the same file. */
    "resolveJsonModule": true,                      /* Allow importing modules with a '.json' extension. */
    
    /* Type Checking Options */
    "strict": true,                                 /* Enable all strict type-checking options. */
    "noImplicitAny": true,                          /* Raise error on expressions and declarations with an implied 'any' type. (Included in strict) */
    "strictNullChecks": true,                       /* Enable strict null checks. (Included in strict) */
    "strictFunctionTypes": true,                    /* Enable strict checking of function types. (Included in strict) */
    "strictBindCallApply": true,                    /* Enable strict 'bind', 'call', and 'apply' methods on functions. (Included in strict) */
    "strictPropertyInitialization": true,           /* Ensure non-undefined class properties are initialized in the constructor. (Included in strict) */
    "noImplicitThis": true,                         /* Raise error on 'this' expressions with an implied 'any' type. (Included in strict) */
    "alwaysStrict": true,                           /* Parse in strict mode and emit "use strict" for each source file. */
    "noUnusedLocals": true,                         /* Report errors on unused locals. */
    "noUnusedParameters": true,                     /* Report errors on unused parameters. */
    "noFallthroughCasesInSwitch": true,             /* Report errors for fallthrough cases in switch statement. */
    "noImplicitReturns": true,                      /* Report error when not all code paths in function return a value. */
    "isolatedModules": true,                        /* Ensure that each file can be safely transpiled without relying on other files. */

    /* Emit Options */
    "newLine": "lf",                                /* Specify the end of line sequence to be used when emitting files. */
    "importHelpers": true,                          /* Allow importing helper functions from tslib. */
    "skipLibCheck": true,                           /* Skip type checking all .d.ts files. Improves compilation speed. */
    "preserveConstEnums": true,                     /* Do not erase const enum declarations in generated code. */
    "removeComments": true                          /* Do not emit comments in output. */
  },
  "include": ["src/**/*.ts", "src/index.ts"],                       /* Specify files to include in compilation. */
  "exclude": ["node_modules", "**/*.spec.ts"]       /* Specify files or folders to exclude from compilation. */
}